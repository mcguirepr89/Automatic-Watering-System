/* Patrick McGuire -- 01/26/2020
  Automatic Watering System
  Hardware:
  OLED DISPLAY (data=A4, clock=A5)
  5v RELAY (signal=D7, switching power to pump)
  5v WATER PUMP
  ROTARY ENCODER (a=D8, b=D2)
  SOIL SENSOR (A1)
*/

//Including Libraries
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//Defining Hardware
//OLED
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1); //Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)

//Relay
#define relayS 7

//Rotary Encoder
#define rotaryA 8
#define rotaryB 2

//Soil Sensor
#define analogInPin A1

//Integer Variables
int dryValue = 70;
int aState;
int aLastState;
int sensorValue;


//Setup in the same order as above
void setup() {
  //OLED
  Serial.begin(115200);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }
  delay(2000);
  //display.setRotation(2);
  display.clearDisplay();
  display.setTextColor(WHITE);

  //Relay
  pinMode(relayS, OUTPUT);

  //Rotary Encoder
  pinMode (rotaryA, INPUT);
  pinMode (rotaryB, INPUT);
  aLastState = digitalRead(rotaryA);
  attachInterrupt(digitalPinToInterrupt(rotaryB), wetset, CHANGE);
}


void loop() {
  delay(250); //Just slowing shit down

  //Instantiate the soil sensor and adjust for some shit
  int t = analogRead(analogInPin) / 10 + 12;
  int s = 0;
  if (isnan(t)) {
    Serial.println("Failed to read soil!");
  }
  Serial.print("soil sensor = " );
  Serial.println(t);

  //Watering loop = set to water for 6 seconds
  if ( t <= dryValue ) {

    display.clearDisplay();                           //Display "Watering" before the ellipses loop
    display.setTextSize(2);
    display.setCursor(0, 3);
    display.print("Watering");
    display.display();

    for ( s = dryValue; s <= dryValue; digitalWrite(relayS, HIGH)) {
      Serial.print("Watering . . . ");
      delay(500);
      display.print(".");
      display.display();
    }

    digitalWrite(relayS, LOW);                         //Turn off the pump
  }

  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 3);
  display.print("Soil: ");
  display.setTextSize(2);
  display.setCursor(70, 3);
  if ( t >= 100 ) {
    display.print("100%");
  } else {
    display.print(t);
    display.print("%");
  }
  display.setTextSize(1.5);
  display.setCursor(0, 22);
  display.print("Watering trigger: ");
  display.setCursor(109, 22);
  display.print(dryValue);
  display.print("%");
  display.display();

}


//Wetset interrupt loop to set the 'dryValue' variable for the watering trigger
void wetset() {
  {
    volatile static unsigned long last_interrupt_time = 0;
    unsigned long interrupt_time = millis();
    if (interrupt_time - last_interrupt_time > 3 )  // ignores interupts for 3 milliseconds
    {
      aState = digitalRead(rotaryA);
      if (aState != aLastState) {
        if (digitalRead(rotaryB) != aState) {
          if (dryValue >= 1) {
            dryValue --;
          }
        } else {
          if (dryValue <= 99) {

            dryValue ++;
          }
        }
        Serial.print("Watering trigger: ");
        Serial.println(dryValue);
      }
      aLastState = aState;
    }
    last_interrupt_time = interrupt_time;
  }
}
